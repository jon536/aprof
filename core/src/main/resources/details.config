# This is a default configuration of detailed (aka interesting aka tracked) methods.
# In order to lessen impact on performance, do not place here methods which never allocate memory.
# It is strongly advised to specify custom classes along with their interfaces
# so that transformer can properly process calls to the custom classes via interfaces.
#
# File format is a list of sections with class-name followed by a list of method
# names on subsequent lines prefixed by spaces or tabs:
#
# <class-name>
#   <method-name>
#   ...
#   <method-name>
#
# Asterisk '*' method name means that every method of the class shall be tracked.

####################
# Core Java

java.lang.Object
	toString

java.lang.Thread
	<init>
	getName
	start
	stop
	getStackTrace
	getAllStackTraces
	dumpStack
	toString

####################
# Strings

java.lang.String
	<init>
	toLowerCase
	toUpperCase
	toCharArray
	trim
	format
	valueOf
	copyValueOf
	subSequence
	substring
	concat
	getBytes
	split
	matches
	replace
	replaceFirst
	replaceAll

java.lang.StringBuilder
	<init>
	append
	appendCodePoint
	ensureCapacity
	insert
	setLength
	subSequence
	substring
	trimToSize
	toString

java.lang.StringBuffer
	<init>
	append
	appendCodePoint
	ensureCapacity
	insert
	setLength
	subSequence
	substring
	trimToSize
	toString

####################
# Regex

java.util.regex.Pattern
	compile
	matcher
	matches
	quote
	split
	toString

####################
# Date & Calendar

java.util.Date
	<init>
	getDate
	setDate
	getSeconds
	setSeconds
	getDay
	getMinutes
	setMinutes
	getMonth
	setMonth
	getHours
	setHours
	getTimezoneOffset
	getYear
	setYear
	toString
	toGMTString

java.util.Calendar
	<init>
	getInstance

# all other Calendar method are tracked via GregorianCalendar which extends Calendar

java.util.GregorianCalendar
	<init>
	getInstance
	clone
	getTime
	getTimeInMillis
	setTimeInMillis
	get
	set
	add
	roll
	getActualMaximum
	getActualMinimum
	getGregorianChange
	setGregorianChange
	toString

####################
# NIO Buffers

java.nio.ByteBuffer
	allocate
	allocateDirect
	wrap
	duplicate
	slice
	asReadOnlyBuffer
	asCharBuffer
	toString

java.nio.CharBuffer
	allocate
	allocateDirect
	wrap
	duplicate
	slice
	asReadOnlyBuffer
	toString

####################
# Collections

java.util.Arrays
	asList
	copyOf
	copyOfRange
	deepToString
	sort
	toString

java.util.Collections
	addAll
	asLifoQueue
	checkedCollection
	checkedList
	checkedMap
	checkedSet
	checkedSortedMap
	checkedSortedSet
	copy
	enumeration
	list
	nCopies
	singleton
	singletonList
	singletonMap
	sort
	synchronizedCollection
	synchronizedList
	synchronizedMap
	synchronizedSet
	synchronizedSortedMap
	synchronizedSortedSet
	unmodifiableCollection
	unmodifiableList
	unmodifiableMap
	unmodifiableSet
	unmodifiableSortedMap
	unmodifiableSortedSet

# Note that all methods from the corresponding collection interfaces and abstract classes will
# be tracked automatically, so only concrete class methods need to be mentioned here

java.util.ArrayList
	<init>
	clone
	trimToSize
	ensureCapacity
	add
	addAll
	iterator
	listIterator
	subList
	toArray
	toString

java.util.LinkedList
	<init>
	clone
	addFirst
	addLast
	offer
	add
	addAll
	iterator
	listIterator
	toArray
	toString

java.util.HashSet
	<init>
	clone
	add
	addAll
	iterator
	toArray
	toString

java.util.TreeSet
	<init>
	clone
	add
	addAll
	iterator
	descendingIterator
	subSet
	headSet
	tailSet
	toArray
	toString

java.util.IdentityHashMap
	<init>
	clone
	put
	putAll
	keySet
	values
	entrySet
	toString

java.util.HashMap
	<init>
	clone
	put
	putAll
	keySet
	values
	entrySet
	toString

java.util.TreeMap
	<init>
	clone
	put
	putAll
	keySet
	values
	entrySet
	descendingMap
	headMap
	tailMap
	subMap
	toString

java.util.Vector
	<init>
	clone
	trimToSize
	ensureCapacity
	add
	addAll
	iterator
	listIterator
	subList
	toArray
	toString
	setSize
	elements
	addElement

java.util.Hashtable
	<init>
	clone
	put
	putAll
	keySet
	values
	entrySet
	toString
	keys
	elements

####################
# Boxing methods should be tracked, except for java.lang.Boolean.valueOf

java.lang.Byte
	<init>
	decode
	valueOf
	parseByte
	toString

java.lang.Short
	<init>
	decode
	valueOf
	parseShort
	toString

java.lang.Integer
	<init>
	decode
	valueOf
	parseInt
	getInteger
	toString
	toHexString
	toOctalString
	toBinaryString

java.lang.Long
	<init>
	decode
	valueOf
	parseLong
	getLong
	toString
	toHexString
	toOctalString
	toBinaryString

java.lang.Float
	<init>
	valueOf
	parseFloat
	toString
	toHexString

java.lang.Double
	<init>
	valueOf
	parseDouble
	toString
	toHexString

####################
# Almost all "big math" generates garbage

java.math.BigInteger
	<init>
	valueOf
	abs
	add
	and
	andNot
	clearBit
	divide
	divideAndRemainder
	flipBit
	gcd
	max
	min
	mod
	monInverse
	modPow
	multiply
	negate
	nextProbablePrime
	not
	or
	pow
	probablePrime
	remainder
	setBit
	shiftLeft
	shiftRight
	subtract
	xor
	toByteArray
	toString

java.math.BigDecimal
	<init>
	valueOf
	abs
	add
	divide
	divideAndRemainder
	divideToIntegralValue
	max
	min
	movePointLeft
	movePointRight
	multiply
	negate
	plus
	pow
	remainder
	scaleByPowerOfTen
	setScale
	stringTrailingZeroes
	subtract
	ulp
	unscaledValue
	toBigInteger
	toBigIntegerExact
	toEngineeringString
	toPlainString
	toString

####################
# Reflection

java.lang.Class
	isAnonymousClass
	isAnnotationPresent
	isLocalClass
	isMemberClass
	forName
	getAnnotation
	getAnnotations
	getCanonicalName
	getClasses
	getConstructor
	getConstructors
	getDeclaredAnnotations
	getDeclaredClasses
	getDeclaredConstructor
	getDeclaredConstructors
	getDeclaredField
	getDeclaredFields
	getDeclaredMethod
	getDeclaredMethods
	getEnclosingClass
	getEnclosingMethod
	getField
	getFields
	getMethod
	getMethods
	getPackage
	getProtectionDomain
	getResource
	getResourceAsStream
	getSimpleName
	getTypeParameters
	newInstance
	toString

java.lang.reflect.Constructor
	newInstance

####################
# Serialization

java.io.ObjectOutputStream
	<init>
	writeClass
	writeClassDesc
	writeObject
	writeUnshared

java.io.ByteArrayOutputStream
	<init>
	write
	toByteArray
	toString

####################
# Deserialization

java.io.ObjectInputStream
	<init>
	readClass
	readClassDesc
	readObject
	readUnshared

####################
# Text formatting/parsing

java.text.DateFormat
	getInstance
	getDateInstance
	getTimeInstance
	getDateTimeInstance

java.text.SimpleDateFormat
	<init>
	clone
	set2DigitYearStart
	get2DigitYearStart
	format
	formatToCharacterIterator
	parse
	parseObject
	toPattern
	toLocalizedPattern
	applyPattern
	applyLocalizedPattern
	getDateFormatSymbols
	setDateFormatSymbols

java.text.NumberFormat
	getInstance
	getNumberInstance
	getIntegerInstance
	getCurrencyInstance
	getPercentInstance
	getScientificInstance
	getAvailableLocales

java.text.DecimalFormat
	<init>
	clone
	format
	formatToCharacterIterator
	parse
	parseObject
	getDecimalFormatSymbols
	setDecimalFormatSymbols
	toPattern
	toLocalizedPattern
	applyPattern
	applyLocalizedPattern
	setCurrency

java.text.ChoiceFormat
	<init>
	clone
	applyPattern
	toPattern
	format
	parse
	parseObject

java.text.MessageFormat
	<init>
	clone
	applyPattern
	toPattern
	getFormatsByArgumentIndex
	getFormats
	format
	formatToCharacterIterator
	parse
	parseObject

java.util.Formatter
	<init>
	format
	toString

####################
# I/O

java.io.Console
	readLine
	print
	println
	format
	printf

java.io.PrintStream
	print
	println
	format
	printf

java.io.PrintWriter
	print
	println
	format
	printf

java.io.DataInput
	readLine

java.io.DataInputStream
	readLine

java.io.BufferedReader
	readLine

java.io.LineNumberReader
	readLine

####################
# Dumps by aprof itself,
# NOTE: Tracking of "com.devexperts.aprof.transformer.AProfTransformer.transform" is hard-coded in its code

com.devexperts.aprof.dump.Dumper
	makeOverflowSnapshot
	copyTotalSnapshotTo
	sendDumpTo
	makeDump

####################
# Aprof "selftest" needs this  configuration

com.devexperts.aprof.selftest.TrackingTest
	trackedMethod

com.devexperts.aprof.selftest.TrackingDeepTest
	trackedMethod

com.devexperts.aprof.selftest.TrackingIntfTrackedImpl
	trackedMethod
